{"version":3,"sources":["components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","components/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["Medal","props","medal","country","onIncrement","onDecrement","canPatch","className","name","Fragment","onClick","id","disabled","Country","medals","onDelete","canDelete","sum","forEach","getMedalsTotal","map","NewCountry","onAdd","prompt","trim","length","Login","onLogin","useState","username","setUsername","password","setPassword","history","useHistory","onSubmit","e","preventDefault","console","log","push","handleSubmit","htmlFor","onChange","target","value","autoFocus","type","placeholder","App","jwtApiEndPoint","countries","setCountries","connection","setConnection","canPost","user","setUser","useRef","latestCountries","current","useEffect","a","axios","get","fetchedCountries","data","fetchCountries","encodedJwt","localStorage","getItem","getUser","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","then","on","mutableCountries","concat","filter","c","idx","findIndex","catch","handleAdd","isValidToken","post","headers","response","status","alert","handleDelete","countryId","originalCountries","delete","handleIncrement","medalName","handleUpdate","handleDecrement","factor","originalCount","jsonPatch","op","path","JSON","stringify","patch","revertCountries","handleLogin","resp","token","setItem","decodedJwt","jwtDecode","diff","Date","now","parseInt","removeItem","indexOf","reduce","b","getAllMedalsTotal","href","to","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f902e1d5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Medal = (props) => {\n  const { medal, country, onIncrement, onDecrement, canPatch} = props;\n  return (\n    <div className=\"medals\">\n      { medal.name } Medals: { country[medal.name] }\n      { canPatch && \n        <React.Fragment>\n          <button onClick={ () => onIncrement(country.id, medal.name) }>+</button>\n          <button disabled={ country[medal.name] === 0 } onClick={ () => onDecrement(country.id, medal.name) }>-</button>\n        </React.Fragment>\n      }\n      \n    </div>\n  );\n}\n\nexport default Medal;\n","import React from 'react';\nimport Medal from './Medal';\n\nconst Country = (props) => {\n  const { country, medals, onIncrement, onDecrement, onDelete, canPatch, canDelete } = props;\n\n  const getMedalsTotal = (country, medals) => {\n    let sum = 0;\n    medals.forEach(medal => { sum += country[medal.name]; });\n    return sum;\n  }\n  return (\n    <div className=\"country\">\n      <div className=\"name\">\n        { country.name }\n        <span className=\"badge\">\n          { getMedalsTotal(country, medals) }\n        </span>\n      </div>\n      { medals.map(medal =>\n        <Medal \n          key={ medal.id } \n          country={ country } \n          medal={ medal } \n          canPatch={ canPatch }\n          onIncrement={ onIncrement } \n          onDecrement={ onDecrement } />\n      ) }\n      {canDelete && <button onClick={() => onDelete(country.id)}>delete</button>}\n      <hr />\n    </div>\n  );\n}\n\nexport default Country;\n","import React from 'react';\n\nconst NewCountry = (props) => {\n  const { onAdd } = props;\n  const handleClick = () => {\n    const name = prompt('Enter country name');\n    if (name && name.trim().length > 0) {\n      onAdd(name);\n    }\n  }\n  return (\n    <div className='newCountryButton'>\n      <button onClick={ handleClick }>New Country</button>\n    </div>\n  );\n}\n\nexport default NewCountry;\n","import React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\n// import axios from 'axios';\n\nfunction Login(props) {\n  const { onLogin } = props;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('Submit');\n    onLogin(username, password);\n    history.push(\"/\");\n  }\n  const handleCancel = () => {\n    history.push(\"/\");\n  }\n  return (\n    <form className='loginForm' onSubmit={(e) => handleSubmit(e)}>\n      <p>\n        <label htmlFor=\"username\">Username: </label>\n        <input onChange={ (e) => setUsername(e.target.value) } value={username} autoFocus type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" />\n      </p>\n      <p>\n        <label htmlFor=\"password\">Password: </label>\n        <input onChange={ (e) => setPassword(e.target.value) } value={password} type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\n      </p>\n      <p>\n        <button disabled={username.length === 0 || password.length === 0} type=\"submit\">Submit</button> <button onClick={handleCancel} type=\"button\">Cancel</button>\n      </p>\n    </form>\n  );\n}\n\nexport default Login;\n","// Repository:  medals-b-react\n// Author:      Jeff Grissom\n// Version:     9.xx-01\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport jwtDecode from 'jwt-decode';\nimport Country from './components/Country';\nimport NewCountry from './components/NewCountry';\nimport Login from './components/Login';\nimport './App.css';\n\nconst App = () => {\n  // const apiEndpoint = \"https://localhost:5001/api/country\";\n  // const jwtApiEndPoint = \"https://localhost:5001/jwt/api/country\";\n  // const hubEndpoint = \"https://localhost:5001/medalsHub\"\n  // const usersEndpoint = \"https://localhost:5001/api/users/login\";\n  // const apiEndpoint = \"https://medalsapi.azurewebsites.net/api/country\";\n \n  const jwtApiEndPoint = \"https://medalsapi.azurewebsites.net/jwt/api/country\";\n  const hubEndpoint = \"https://medalsapi.azurewebsites.net/medalsHub\"\n  const usersEndpoint = \"https://medalsapi.azurewebsites.net/api/users/login\";\n  \n  const [ countries, setCountries ] = useState([]);\n  const [ connection, setConnection] = useState(null);\n  const [ user, setUser ] = useState(\n    {\n      name: null,\n      canPost: false,\n      canPatch: false,\n      canDelete: false\n    }\n  );\n\n  const medals = useRef([\n    { id: 1, name: 'gold' },\n    { id: 2, name: 'silver' },\n    { id: 3, name: 'bronze' },\n  ]);\n  const latestCountries = useRef(null);\n  // latestCountries.current is a ref variable to countries\n  // this is needed to access state variable in useEffect w/o dependency\n  latestCountries.current = countries;\n\n  // this is the functional equivalent to componentDidMount\n  useEffect(() => {\n    // initial data loaded here\n    async function fetchCountries() {\n      const { data : fetchedCountries } = await axios.get(jwtApiEndPoint);\n      setCountries(fetchedCountries);\n    }\n    fetchCountries();\n\n    const encodedJwt = localStorage.getItem(\"token\");\n    // check for existing token\n    if (encodedJwt) {\n      setUser(getUser(encodedJwt));\n    }\n\n    // signalR\n    const newConnection = new HubConnectionBuilder()\n      .withUrl(hubEndpoint)\n      .withAutomaticReconnect()\n      .build();\n\n    setConnection(newConnection);\n  }, []);\n  // componentDidUpdate (changes to connection)\n  useEffect(() => {\n    if (connection) {\n      connection.start()\n      .then(() => {\n        console.log('Connected!')\n\n        connection.on('ReceiveAddMessage', country => {\n          console.log(`Add: ${country.name}`);\n          let mutableCountries = [...latestCountries.current];\n          mutableCountries = mutableCountries.concat(country);\n\n          setCountries(mutableCountries);\n        });\n\n        connection.on('ReceiveDeleteMessage', id => {\n          console.log(`Delete id: ${id}`);\n          let mutableCountries = [...latestCountries.current];\n          mutableCountries = mutableCountries.filter(c => c.id !== id);\n\n          setCountries(mutableCountries);\n        });\n\n        connection.on('ReceivePatchMessage', country => {\n          console.log(`Patch: ${country.name}`);\n          let mutableCountries = [...latestCountries.current];\n          const idx = mutableCountries.findIndex(c => c.id === country.id);\n          mutableCountries[idx] = country;\n\n          setCountries(mutableCountries);\n        });\n      })\n      .catch(e => console.log('Connection failed: ', e));\n    }\n  // useEffect is dependent on changes connection\n  }, [connection]);\n\n  const handleAdd = async (name) => {\n    // check for valid token based on token exp\n    if (isValidToken())\n    {\n      console.log('valid');\n      try {\n        await axios.post(jwtApiEndPoint, {\n          name: name\n        }, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } catch (ex) {\n        if (ex.response && ex.response.status === 401) {\n          // perhaps token has expired\n          alert(\"You are not authorized to complete this request\");\n        } else if (ex.response) {\n          console.log(ex.response);\n        } else {\n          console.log(\"Request failed\");\n        }\n      }\n    } else {\n      alert('Your token has expired');\n    }\n  }\n  const handleDelete = async (countryId) => {\n    // check for valid token based on token exp\n    if (isValidToken())\n    {\n      const originalCountries = countries;\n      setCountries(countries.filter(c => c.id !== countryId));\n      try {\n        await axios.delete(`${jwtApiEndPoint}/${countryId}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) {\n          // country already deleted\n          console.log(\"The record does not exist - it may have already been deleted\");\n        } else { \n          setCountries(originalCountries);\n          if (ex.response && ex.response.status === 401) {\n            // perhaps token has expired\n            alert(\"You are not authorized to complete this request\");\n          } else if (ex.response) {\n            console.log(ex.response);\n          } else {\n            console.log(\"Request failed\");\n          }\n        }\n      }\n    } else {\n      alert('Your token has expired');\n    }\n  }\n  const handleIncrement = (countryId, medalName) => handleUpdate(countryId, medalName, 1);\n  const handleDecrement = (countryId, medalName) =>  handleUpdate(countryId, medalName, -1)\n  const handleUpdate = async (countryId, medalName, factor) => {\n    // check for valid token based on token exp\n    if (isValidToken())\n    {\n      const idx = countries.findIndex(c => c.id === countryId);\n      const mutableCountries = [...countries ];\n      const originalCount = mutableCountries[idx][medalName];\n      mutableCountries[idx][medalName] += (1 * factor);\n      setCountries(mutableCountries);\n      const jsonPatch = [{ op: \"replace\", path: medalName, value: mutableCountries[idx][medalName] }];\n      console.log(`json patch for id: ${countryId}: ${JSON.stringify(jsonPatch)}`);\n\n      try {\n        await axios.patch(`${jwtApiEndPoint}/${countryId}`, jsonPatch, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) {\n          // country does not exist\n          console.log(\"The record does not exist - it may have been deleted\");\n        } else if (ex.response && ex.response.status === 401) { \n          // perhaps token has expired\n          alert('You are not authorized to complete this request');\n          const revertCountries = [...countries];\n          revertCountries[idx][medalName] = originalCount;\n          setCountries(revertCountries);\n        } else if (ex.response) {\n          console.log(ex.response);\n        } else {\n          console.log(\"Request failed\");\n        }\n      }\n    } else {\n      alert('Your token has expired');\n    }\n  }\n  const handleLogin = async (username, password) => {\n    try {\n      const resp = await axios.post(usersEndpoint, { username: username, password: password });\n      // save token to local storage\n      const encodedJwt = resp.data.token;\n      localStorage.setItem('token', encodedJwt);\n      setUser(getUser(encodedJwt));\n    } catch (ex) {\n      if (ex.response && (ex.response.status === 401 || ex.response.status === 400 )) {\n        alert(\"Login failed\");\n      } else if (ex.response) {\n        console.log(ex.response);\n      } else {\n        console.log(\"Request failed\");\n      }\n    }\n  }\n  const handleLogout = (e) => {\n    e.preventDefault();\n    console.log('logout');\n    localStorage.removeItem('token');\n    setUser({\n      name: null,\n      canPost: false,\n      canPatch: false,\n      canDelete: false\n    });\n    return false;\n  }\n  const isValidToken = () => {\n    const encodedJwt = localStorage.getItem(\"token\");\n    // check for existing token\n    if (encodedJwt) {\n      const decodedJwt = jwtDecode(encodedJwt);\n      const diff = Date.now() - (decodedJwt['exp'] * 1000);\n      if (diff < 0) {\n        console.log(`token expires in ${parseInt((diff * -1) / 60000)} minutes`);\n        return true;\n      } else {\n        console.log(`token expired ${parseInt(diff / 60000)} minutes ago`);\n        localStorage.removeItem('token');\n        setUser({\n          name: null,\n          canPost: false,\n          canPatch: false,\n          canDelete: false,\n        });\n      }\n    }\n    return false;\n  }\n  const getUser = (encodedJwt) => {\n    const decodedJwt = jwtDecode(encodedJwt);\n    const diff = Date.now() - (decodedJwt['exp'] * 1000);\n    if (diff < 0) {\n      console.log(`token expires in ${parseInt((diff * -1) / 60000)} minutes`);\n      return {\n        name: decodedJwt['username'],\n        canPost: decodedJwt['roles'].indexOf('medals-post') === -1 ? false : true,\n        canPatch: decodedJwt['roles'].indexOf('medals-patch') === -1 ? false : true,\n        canDelete: decodedJwt['roles'].indexOf('medals-delete') === -1 ? false : true,\n      };\n    } else {\n      console.log(`token expired ${parseInt(diff / 60000)} minutes ago`);\n      localStorage.removeItem('token');\n      return {\n          name: null,\n          canPost: false,\n          canPatch: false,\n          canDelete: false,\n        };\n    }\n  }\n  const getAllMedalsTotal = () => {\n    let sum = 0;\n    medals.current.forEach(medal => { sum += countries.reduce((a, b) => a + b[medal.name], 0); });\n    return sum;\n  }\n  return (\n    <Router>\n      <div className='appHeading'>\n        Olympic Medals\n        <span className='badge'>\n          { getAllMedalsTotal() }\n        </span>\n        {user.name ? \n          <span className='logout'><a href=\"/\" onClick={handleLogout} className='logoutLink'>Logout</a> [{user.name}]</span>\n          :\n          <Link to=\"/login\" className='loginLink'>Login</Link>\n        }\n      </div>\n      <Route exact path=\"/login\">\n        <Login onLogin={ handleLogin } />\n      </Route>\n      <div className='countries'>\n          { countries.map(country => \n            <Country \n              key={ country.id } \n              country={ country } \n              medals={ medals.current }\n              canPatch={ user.canPatch }\n              canDelete={ user.canDelete }\n              onDelete={ handleDelete }\n              onIncrement={ handleIncrement } \n              onDecrement={ handleDecrement } />\n          )}\n      </div>\n      { user.canPost && <NewCountry onAdd={ handleAdd } /> }\n    </Router>\n  );\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}